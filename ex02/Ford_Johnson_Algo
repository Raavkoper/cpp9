Merge-insertion sort performs the following steps, on an input X of n elements

1   Group the elements of X into ⌊ n / 2 ⌋ pairs of elements, arbitrarily, leavin
    g one element unpaired if there is an odd number of elements.

2   Perform ⌊ n / 2 ⌋ comparisons, one per pair, to determine the larger of the two
    elements in each pair.

3   Recursively sort the ⌊ n / 2 ⌋ larger elements from each pair, creating a sorted
    sequence S of ⌊ n / 2 ⌋ of the input elements, in ascending order.

4   Insert at the start of S the element that was paired with the first and smallest element of S.

5   Insert the remaining ⌈ n / 2 ⌉ − 1 elements of X ∖ S into S, one at a time,
    with a specially chosen insertion ordering described below. Use binary search
    in subsequences of S to determine the position at which each element should be inserted.

FOR TESTING:

`shuf -i <starting range>-<end range> -n <amount of numbers> | tr "\n" " "`